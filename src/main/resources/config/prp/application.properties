# **************************************** General Configuration *******************************************************

# A comma separated list of database tables names to watch for changes
eip.watchedTables=person,patient,person_name,person_address,patient_identifier,obs

# Camel route to be invoked to process an event for a row in a custom database table
odoo.handler.route=odoo-prp-handler

# Camel route to be invoked via the direct component via the direct component to process obs events to manage resources
# in odoo
obs.to.odoo.resource.handler.route=obs-to-odoo-resource-handler

# Comma-separated list of custom table to OpenMRS REST resource name mappings
odoo.custom.table.resource.mappings=person:person,obs:obs

# The validation question concept used on forms, allowed values are uuid or concept mapping
validation.concept=ICRC:Validated

# The patient type question concept, allowed values are uuid or concept mapping
patient.type.question.concept=ICRC:19618

# Comma-separated list of Obs question and answer mappings, note that you can provider multiple answers separated by a
# charet(^) character, questions and answers are separated by a hash e.g. obs-qn-1#obs-ans-a^obs-ans-b#obs-qn-2,true
odoo.obs.concept.question.answer.mappings=${validation.concept}#CIEL:1065

# Comma-separated list of uuids of the number of physiotherapy sessions concepts
odoo.physio.session.concept.uuids=

# The uuid of the basic service form
basic.service.plan.form.uuid=3b07b00c-1623-4380-af4a-4bb68244eff5

# Camel endpoint to be called when processing an obs event to decide if the associated patient should be added to odoo
# or not
obs.to.customer.decision.rule.endpoint=is-init-decision-after-reg-validated-obs-rule

# Camel endpoint to be called to allow implementations to set extra fields to be pushed to odoo when creating a customer
# record
custom.customer.data.callback.endpoint=direct:callback-get-custom-customer-data

# Specifies the odoo group name users in odoo must belong to in order to receive a calendar event for a patient
# admission
odoo.dormitory.notification.group.name=
# ----------------------------------------------------------------------------------------------------------------------


# **************************************** Logging Configuration For Odoo Routes ***************************************
logging.level.odoo-prp-handler=${openmrs.eip.log.level}
logging.level.obs-to-odoo-resource=${openmrs.eip.log.level}
logging.level.obs-to-odoo-resource-handler=${openmrs.eip.log.level}
logging.level.obs-to-customer=${openmrs.eip.log.level}
logging.level.obs-to-admission-calendar-event=${openmrs.eip.log.level}
logging.level.obs-to-discharge-calendar-event=${openmrs.eip.log.level}
logging.level.patient-uuid-to-odoo-customer=${openmrs.eip.log.level}
logging.level.odoo-obs-to-order-line=${openmrs.eip.log.level}
logging.level.non-voided-obs-to-order-line-processor=${openmrs.eip.log.level}
logging.level.voided-obs-to-order-line-processor=${openmrs.eip.log.level}
logging.level.concept-to-order-line-processor=${openmrs.eip.log.level}
logging.level.odoo-get-draft-quotations=${openmrs.eip.log.level}
logging.level.odoo-get-external-id-map=${openmrs.eip.log.level}
logging.level.odoo-get-order-line=${openmrs.eip.log.level}
logging.level.odoo-manage-order-line=${openmrs.eip.log.level}
logging.level.odoo-manage-quotation=${openmrs.eip.log.level}
logging.level.callback-get-custom-customer-data=${openmrs.eip.log.level}
logging.level.is-init-decision-after-reg-validated-obs-rule=${openmrs.eip.log.level}
# ----------------------------------------------------------------------------------------------------------------------
