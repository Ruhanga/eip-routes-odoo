# **************************************** General Configuration *******************************************************

# A comma separated list of database tables names to watch for changes
eip.watchedTables=person,patient,person_name,person_address,patient_identifier,obs

# Camel route to be invoked to process an event for a row in a custom database table
odoo.handler.route=odoo-prp-handler

# Comma-separated list of custom table to OpenMRS REST resource name mappings
odoo.custom.table.resource.mappings=person:person,obs:obs

# Comma-separated list of Obs question and answer mappings, note that you can provider multiple answers separated by a
# charet(^) character, questions and answers are separated by a colon e.g. obs-qn-1:obs-ans-a^obs-ans-b:obs-qn-2,true
odoo.obs.concept.question.answer.mappings=

# Comma-separated list of uuids of the number of physiotherapy sessions concepts
odoo.physio.session.concept.uuids=

# Camel endpoint to be called when processing an obs event to decide if the associated patient should be added to odoo
# or not
obs.to.customer.decision.rule.endpoint=direct:is-obs-form-validated-rule

# The validation question concept used on forms, allowed values are uuid or concept mapping
validation.concept=

# Camel endpoint to be called to allow implementations to set extra fields to be pushed to odoo when creating a customer
# record
custom.customer.data.callback.endpoint=direct:callback-get-custom-customer-data
# ----------------------------------------------------------------------------------------------------------------------


# **************************************** Logging Configuration For Odoo Routes ***************************************
logging.level.odoo-prp-handler=${openmrs.eip.log.level}
logging.level.odoo-obs-to-customer=${openmrs.eip.log.level}
logging.level.patient-uuid-to-odoo-customer=${openmrs.eip.log.level}
logging.level.odoo-obs-to-order-line=${openmrs.eip.log.level}
logging.level.non-voided-obs-to-order-line-processor=${openmrs.eip.log.level}
logging.level.voided-obs-to-order-line-processor=${openmrs.eip.log.level}
logging.level.is-obs-form-validated-rule=${openmrs.eip.log.level}
logging.level.concept-to-order-line-processor=${openmrs.eip.log.level}
logging.level.odoo-get-draft-quotations=${openmrs.eip.log.level}
logging.level.odoo-get-external-id-map=${openmrs.eip.log.level}
logging.level.odoo-get-order-line=${openmrs.eip.log.level}
logging.level.odoo-manage-order-line=${openmrs.eip.log.level}
logging.level.odoo-manage-quotation=${openmrs.eip.log.level}
logging.level.callback-get-custom-customer-data=${openmrs.eip.log.level}
logging.level.get-concept-by-mapping-from-openmrs=${openmrs.eip.log.level}
logging.level.convert-to-concept-uuid-if-is-mapping=${openmrs.eip.log.level}
# ----------------------------------------------------------------------------------------------------------------------
