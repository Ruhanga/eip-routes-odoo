<routes xmlns="http://camel.apache.org/schema/spring">

    <route id="odoo-event-listener" errorHandlerRef="watcherErrorHandler">
        <from uri="direct:odoo-event-listener" />

        <log message="Received DB event: ${exchangeProperty.event}" loggingLevel="TRACE" />

        <when>
            <simple>${exchangeProperty.event.snapshot} == false &amp;&amp; ${exchangeProperty.event.operation} == 'c'</simple>
            <when>
                <simple>${exchangeProperty.event.tableName} == 'orders' || ${exchangeProperty.event.tableName} == 'test_order' || ${exchangeProperty.event.tableName} == 'drug_order'</simple>

                <log message="Received Order event: ${exchangeProperty.event}" loggingLevel="DEBUG" />

                <log message="Loading Order from DB..." loggingLevel="DEBUG" />

                <setBody>
                    <simple>${camelContext.getRegistry().lookupByName("orderRepository").findByUuid(${exchangeProperty.event.identifier})}</simple>
                </setBody>
                
                <log message="Loaded Order -> ${body}" loggingLevel="DEBUG" />

                <choice>
                    <when>
                        <simple>${body} != null</simple>
                        <setProperty name="order-instance">
                            <simple>${body}</simple>
                        </setProperty>
						<setProperty name="is-new">
							<spel>#{body.action == 'NEW' || body.action == 'RENEW'}</spel>
						</setProperty>
						
						<toD uri="direct:odoo-authentication" />

						<setProperty name="odoo-user-id">
							<simple>${body}</simple>
						</setProperty>

						<setProperty name="id-type">
							<simple>${camelContext.getRegistry().lookupByName("patientIdentifierTypeRepository").findByUuid({{openmrs.odoo.patientIdType.uuid}})}</simple>
						</setProperty>

						<log message="Odoo Identifier Type: ${exchangeProperty.id-type}" loggingLevel="DEBUG" />

						<toD uri="sql:SELECT p.identifier FROM patient_identifier p WHERE p.patient_id = ${exchangeProperty.order-instance.patient.id} AND p.identifier_type = ${exchangeProperty.id-type.id} AND p.voided = 0?dataSource=openmrsDataSource" />

						<when>
							<simple>${body.size()} == 1</simple>
							<setProperty name="patient-odoo-id">
								<spel>#{T(java.lang.Integer).valueOf(body[0].get("identifier"))}</spel>
							</setProperty>

							<log message="Patient exists in odoo" />
						</when>

						<setProperty name="concept-id">
							<simple>${exchangeProperty.order-instance.concept.id}</simple>
						</setProperty>

						<when>
							<simple>${exchangeProperty.order-instance.action} == 'REVISE' || ${exchangeProperty.order-instance.action} == 'DISCONTINUE'</simple>
							<setProperty name="concept-id">
								<simple>${exchangeProperty.order-instance.previousOrder.concept.id}</simple>
							</setProperty>
						</when>

						<setProperty name="attribute-type">
							<simple>${camelContext.getRegistry().lookupByName("conceptAttributeTypeLightRepository").findByUuid({{openmrs.odoo.productId.conceptAttribType.uuid}})}</simple>
						</setProperty>

						<toD uri="sql:SELECT a.value_reference FROM concept_attribute a WHERE a.concept_id = ${exchangeProperty.concept-id} AND a.attribute_type_id = ${exchangeProperty.attribute-type.id} AND a.voided = 0?dataSource=openmrsDataSource" />

						<when>
							<simple>${body.size()} == 0</simple>
							<throwException exceptionType="org.openmrs.eip.component.exception.EIPException" message="Orderable concept has no value set for the matching odoo product id" />
						</when>

						<setProperty name="odoo-product-id">
							<spel>#{T(java.lang.Integer).valueOf(body[0].get("value_reference"))}</spel>
						</setProperty>
						<when>
							<simple>${exchangeProperty.order-instance} is 'org.openmrs.eip.component.entity.DrugOrder'</simple>
							<setProperty name="is-drug-order">
								<simple>true</simple>
							</setProperty>
						</when>

						<when>
							<simple>${exchangeProperty.is-drug-order} == true</simple>
							<setProperty name="order-quantity">
								<simple>${exchangeProperty.order-instance.quantity}</simple>
							</setProperty>
						</when>

						<to uri="direct:odoo-process-order" />
					</when>
                    <otherwise>
                        <log message="No Order found with uuid: ${exchangeProperty.event.identifier}" loggingLevel="WARN" />
                    </otherwise>
                </choice>
            </when>
        </when>
    </route>

</routes>