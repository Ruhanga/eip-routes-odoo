<routes xmlns="http://camel.apache.org/schema/spring">

    <route id="odoo-event-listener" errorHandlerRef="watcherErrorHandler">
        <from uri="direct:odoo-event-listener" />

        <log message="Received DB event: ${exchangeProperty.event}" loggingLevel="TRACE" />

        <when>
            <simple>${exchangeProperty.event.snapshot} == false &amp;&amp; ${exchangeProperty.event.operation} == 'c'</simple>
            <when>
                <simple>${exchangeProperty.event.tableName} == 'orders' || ${exchangeProperty.event.tableName} == 'test_order' || ${exchangeProperty.event.tableName} == 'drug_order'</simple>

                <log message="Received Order event: ${exchangeProperty.event}" loggingLevel="DEBUG" />

                <log message="Loading Order from DB..." loggingLevel="DEBUG" />

                <setBody>
                    <simple>${camelContext.getRegistry().lookupByName("orderRepository").findByUuid(${exchangeProperty.event.identifier})}</simple>
                </setBody>
                
                <log message="Loaded Order -> ${body}" loggingLevel="DEBUG" />

                <choice>
                    <when>
                        <simple>${body} != null</simple>
                        <setProperty name="order-instance">
                            <simple>${body}</simple>
                        </setProperty>

						<toD uri="direct:odoo-authentication" />

                        <setProperty name="id-type">
                            <simple>${camelContext.getRegistry().lookupByName("patientIdentifierTypeRepository").findByUuid({{openmrs.odoo.patientIdType.uuid}})}</simple>
                        </setProperty>

                        <log message="Odoo Identifier Type: ${exchangeProperty.id-type}" loggingLevel="DEBUG" />

                        <toD uri="sql:SELECT p.identifier FROM patient_identifier p WHERE p.patient_id = ${exchangeProperty.order-instance.patient.id} AND p.identifier_type = ${exchangeProperty.id-type.id} AND p.voided = 0?dataSource=openmrsDataSource" />

						<choice>
							<when>
								<simple>${exchangeProperty.order-instance.status} = 'NEW' || ${exchangeProperty.order-instance.status} == 'RENEW'</simple>
								<to uri="direct:odoo-process-new-order" />
							</when>
							<when>
								<simple>${exchangeProperty.order-instance.status} == 'REVISE'</simple>
							</when>
							<when>
								<simple>${exchangeProperty.order-instance.status} == 'DISCONTINUE'</simple>
							</when>
							<otherwise>
								<log message="Don't know how to handle Order status: ${exchangeProperty.order-instance.status}" loggingLevel="WARN" />
							</otherwise>
						</choice>
                    </when>
                    <otherwise>
                        <log message="No Order found with uuid: ${exchangeProperty.event.identifier}" loggingLevel="WARN" />
                    </otherwise>
                </choice>
            </when>
        </when>
    </route>

</routes>