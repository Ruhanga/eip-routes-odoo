<routes xmlns="http://camel.apache.org/schema/spring">

    <!--
        Processes an event for a validation obs recorded on the basic service plan form and creates an admission
        calendar event to all users that belong the group specified by application property named
        odoo.dormitory.notification.group.ext.id
    -->

    <route id="obs-to-admission-calendar-event" errorHandlerRef="watcherErrorHandler">
        <from uri="direct:obs-to-admission-calendar-event" />

        <log loggingLevel="DEBUG" message="Start: route with id ${routeId}" />

        <!-- Only process an event for a form validation obs -->
        <when>
            <simple>${exchangeProperty.entity-instance.get('concept').get('uuid')} == '1382a47a-3e63-11e9-b210-d663bd873d93'</simple>
            <log message="Received an event for a form validation obs" />

            <setProperty name="obs">
                <exchangeProperty>entity-instance</exchangeProperty>
            </setProperty>
            <setProperty name="formUuid">
                <simple>{{basic.service.plan.form.uuid}}</simple>
            </setProperty>

            <to uri="direct:obs-captured-on-form-rule" />

            <setProperty name="${routeId}-isBasicServicePlanForm">
                <simple>${body}</simple>
            </setProperty>

            <!-- Only process if this was recorded on the basic service plan form -->
            <when>
                <simple>${exchangeProperty.obs-to-admission-calendar-event-isBasicServicePlanForm} == true</simple>
                <log message="Obs was recorded on the basic service plan form" />

                <setProperty name="isSubResource">
                    <simple>false</simple>
                </setProperty>
                <setProperty name="resourceName">
                    <simple>encounter</simple>
                </setProperty>
                <setProperty name="resourceId">
                    <simple>${exchangeProperty.entity-instance.get('encounter').get('uuid')}</simple>
                </setProperty>
                <setProperty name="resourceRepresentation">
                    <simple>full</simple>
                </setProperty>

                <to uri="direct:get-entity-by-uuid-from-openmrs" />

                <when>
                    <simple>${body} == null</simple>
                    <throwException exceptionType="org.openmrs.eip.EIPException" message="No encounter found in OpenMRS with uuid: ${exchangeProperty.entity-instance.get('encounter').get('uuid')}" />
                </when>

                <setProperty name="encounter">
                    <jsonpath>$</jsonpath>
                </setProperty>

                <log loggingLevel="DEBUG" message="Fetched encounter -> ${exchangeProperty.encounter}" />

                <setProperty name="questionConceptUuid">
                    <simple>5b2efd02-be26-4789-b5ec-7c5ceb428725</simple>
                </setProperty>

                <to uri="direct:get-obs-by-concept-uuid-from-encounter" />

                <setProperty name="${routeId}-patientTypeObs">
                    <simple>${body}</simple>
                </setProperty>

                <log loggingLevel="DEBUG" message="Patient Type obs -> ${exchangeProperty.${routeId}-patientTypeObs}" />

                <!-- Only process if inpatient was selected on the form -->
                <when>
                    <simple>${exchangeProperty.obs-to-admission-calendar-event-patientTypeObs.get('value').get('uuid')} == 'a0b86497-cb21-46ad-9a9b-c99db8db9528'</simple>
                    <log message="Patient is admitted, preparing admission notification" />

                    <setProperty name="isSubResource">
                        <simple>false</simple>
                    </setProperty>
                    <setProperty name="resourceName">
                        <simple>patient</simple>
                    </setProperty>
                    <setProperty name="resourceId">
                        <simple>${exchangeProperty.entity-instance.get('person').get('uuid')}</simple>
                    </setProperty>
                    <setProperty name="resourceRepresentation">
                        <simple>full</simple>
                    </setProperty>

                    <to uri="direct:get-entity-by-uuid-from-openmrs" />

                    <when>
                        <simple>${body} == null</simple>
                        <throwException exceptionType="org.openmrs.eip.EIPException" message="No patient found in OpenMRS with uuid: ${exchangeProperty.entity-instance.get('person').get('uuid')}" />
                    </when>

                    <setProperty name="${routeId}-patient">
                        <jsonpath>$</jsonpath>
                    </setProperty>

                    <log loggingLevel="DEBUG" message="Fetched patient -> ${exchangeProperty.${routeId}-patient}" />

                    <setBody>
                        <spel>#{new java.util.HashMap()}</spel>
                    </setBody>
                    <script>
                        <spel>
                            #{body.put('externalId', '{{odoo.dormitory.notification.group.ext.id}}')}
                            #{body.put('modelName', 'res.groups')}
                        </spel>
                    </script>

                    <to uri="direct:get-resource-by-ext-id-from-odoo" />

                    <when>
                        <simple>${body} == null</simple>
                        <throwException exceptionType="org.openmrs.eip.EIPException" message="No group found in odoo with external id: {{odoo.dormitory.notification.group.ext.id}}" />
                    </when>

                    <setBody>
                        <spel>#{T(java.util.Collections).singletonMap('userIds', body.get('users'))}</spel>
                    </setBody>

                    <to uri="direct:get-partner-ids-by-user-ids" />

                    <setProperty name="${routeId}-partnerIdsAndNames">
                        <simple>${body}</simple>
                    </setProperty>
                    <setProperty name="attendeePartnerIds">
                        <spel>#{new java.util.ArrayList()}</spel>
                    </setProperty>

                    <split parallelProcessing="false">
                        <simple>${exchangeProperty.${routeId}-partnerIdsAndNames}</simple>
                        <script><spel>#{getProperty('attendeePartnerIds').add(body.get('partner_id')[0])}</spel></script>
                    </split>

                    <setProperty name="${routeId}-endLoop">
                        <simple>${null}</simple>
                    </setProperty>
                    <setProperty name="${routeId}-currentItem">
                        <simple>${null}</simple>
                    </setProperty>
                    <setProperty name="${routeId}-hsuId">
                        <simple>${null}</simple>
                    </setProperty>
                    <loop doWhile="true">
                        <simple>${exchangeProperty.${routeId}-endLoop} != true</simple>
                        <setProperty name="${routeId}-currentItem">
                            <simple>${exchangeProperty.${routeId}-patient.get('identifiers').get(${exchangeProperty.CamelLoopIndex})}</simple>
                        </setProperty>

                        <when>
                            <simple>${exchangeProperty.${routeId}-currentItem.get('identifierType').get('uuid')} == '{{openmrs.identifier.type.uuid}}'</simple>
                            <setProperty name="${routeId}-hsuId">
                                <simple>${exchangeProperty.${routeId}-currentItem.get('identifier')}</simple>
                            </setProperty>
                            <setProperty name="${routeId}-endLoop">
                                <simple>true</simple>
                            </setProperty>
                        </when>

                        <when>
                            <spel>#{getProperty('CamelLoopIndex') == getProperty('obs-to-admission-calendar-event-patient').get('identifiers').size() - 1}</spel>
                            <setProperty name="${routeId}-endLoop">
                                <simple>true</simple>
                            </setProperty>
                        </when>
                    </loop>

                    <log loggingLevel="DEBUG" message="HSU id -> ${exchangeProperty.${routeId}-hsuId}" />

                    <setProperty name="questionConceptUuid">
                        <simple>a320170f-2417-45eb-86ab-5f8eb4074500</simple>
                    </setProperty>

                    <to uri="direct:get-obs-by-concept-uuid-from-encounter" />

                    <setProperty name="${routeId}-estimatedDaysObs">
                        <simple>${body}</simple>
                    </setProperty>

                    <log loggingLevel="DEBUG" message="Estimated days obs -> ${exchangeProperty.${routeId}-estimatedDaysObs}" />

                    <setProperty name="questionConceptUuid">
                        <simple>25929a4b-fa2d-4657-b74c-385b1eb4384f</simple>
                    </setProperty>

                    <to uri="direct:get-obs-by-concept-uuid-from-encounter" />

                    <setProperty name="${routeId}-careGiverObs">
                        <simple>${body}</simple>
                    </setProperty>

                    <log loggingLevel="DEBUG" message="Accompanied by care giver obs -> ${exchangeProperty.${routeId}-careGiverObs}" />

                    <setProperty name="subject">
                        <simple>${exchangeProperty.${routeId}-patient.get('person').get('display')}/${exchangeProperty.${routeId}-estimatedDaysObs.get('value').intValue()} days</simple>
                    </setProperty>
                    <setProperty name="duration">
                        <simple>1440</simple>
                    </setProperty>
                    <setProperty name="startDateTime">
                        <spel>#{T(java.time.LocalDateTime).now(T(java.time.ZoneId).of('UTC'))}</spel>
                    </setProperty>
                    <setProperty name="description">
                        <simple>Service User ${exchangeProperty.${routeId}-patient.get('person').get('display')} ${exchangeProperty.${routeId}-hsuId} inpatient for estimated ${exchangeProperty.${routeId}-estimatedDaysObs.get('value').intValue()} days</simple>
                    </setProperty>

                    <when>
                        <simple>${exchangeProperty.${routeId}-careGiverObs.get('value').get('uuid')} == '1065AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA'</simple>
                        <setProperty name="description">
                            <simple>${exchangeProperty.description}, accompanied by a caregiver</simple>
                        </setProperty>
                    </when>

                    <log message="Adding an admission calendar event in odoo" />

                    <to uri="direct:save-calendar-event-in-odoo" />

                    <log message="Successfully added an admission calendar event in odoo" />
                </when>
            </when>
        </when>

        <log loggingLevel="DEBUG" message="End: route with id ${routeId}" />
    </route>

</routes>
